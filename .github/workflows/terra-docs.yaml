name: Generate Terraform Docs

on:
  pull_request:
    branches:
      - main
    paths:
      - '**/*.tf'
      - '**/*.tfvars'
  push:
    branches:
      - '**'
    paths:
      - '**/*.tf'
      - '**/*.tfvars'
      - '**/*.yaml'

jobs:
  generate-docs:
    runs-on: self-hosted

    steps:

      - name: Install Dependencies
        run: |
          # Update package lists
          sudo apt-get update

          # Install Terraform
          sudo apt-get install -y wget unzip
          wget https://releases.hashicorp.com/terraform/1.5.4/terraform_1.5.4_linux_amd64.zip
          unzip terraform_1.5.4_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          terraform --version

          # Install Graphviz
          sudo apt-get install -y graphviz
          dot -V # Verify Graphviz installation

          # Install Terraform Docs
          curl -s https://raw.githubusercontent.com/terraform-docs/terraform-docs/main/install.sh | bash
          terraform-docs --version # Verify Terraform Docs installation

          # Install Python3 and Pip (for Rover)
          sudo apt-get install -y python3 python3-pip

          # Install Rover
          pip3 install rover
          rover --version # Verify Rover installation
      # Step 1: Checkout Code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Initialize Terraform
      - name: Initialize Terraform
        run: terraform init

      # Step 3: Generate Terraform Documentation and Graph
      - name: Generate Terraform docs and graph
        run: |
          # Define file locations
          README="README.md"
          GRAPH_DIR=".tfdoc-assets"
          GRAPH="$GRAPH_DIR/terraform-dependency-graph.png"

          # Clear existing files and directories
          rm -f $README $GRAPH
          mkdir -p $GRAPH_DIR

          # Generate Dependency Graph
          echo "## Terraform Dependency Graph" >> $README
          terraform graph | dot -Tpng -o $GRAPH || { echo "Failed to generate graph"; exit 1; }
          echo "![Terraform Graph]($GRAPH)" >> $README

          # Generate Terraform Documentation
          echo -e "\n## Terraform Documentation" >> $README
          terraform-docs markdown table . >> $README || { echo "Failed to generate Terraform docs"; exit 1; }
      
      # Step 4:  Output Readme

      - name: Output README
        run: |
          echo -e "\033[1;34m---------------- README.md ----------------- \033[0m"
          if [ -f README.md ] ; then
            while IFS= read -r line; do
               echo "$line"
            done  < README.md
          else
            echo "README.md not found"
            exit 1
          fi
          
      # Step 5: Commit and Push Generated Docs (On Push Only)
      - name: Commit generated docs (only on push)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add README.md .tfdoc-assets/
          git status
          git diff --quiet && git diff --staged --quiet || git commit -m "Auto-update: Terraform Docs" --no-verify
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          git ls-remote origin || { echo "Failed to authenticate with token"; exit 1; }
          git push origin HEAD || { echo "Failed to push changes"; exit 1; }
